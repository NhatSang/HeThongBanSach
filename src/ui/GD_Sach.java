
package ui;

import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;

import dao.SanPham_DAO;
import entity.CapDoHoc;
import entity.LoaiBia;
import entity.LoaiSanPham;
import entity.NhaCungCap;
import entity.NhaXuatBan;
import entity.Sach;
import entity.TacGia;
import entity.ThuongHieu;

/**
 *
 * @author Admin
 */
public class GD_Sach extends javax.swing.JPanel {

	/**
	 * Creates new form Sach
	 */
	public GD_Sach() {
		initComponents();
		loadSach();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		txtTimKiem = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableSach = new javax.swing.JTable();
		btnTimKiem = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		lbMa = new javax.swing.JLabel();
		txtMa = new javax.swing.JTextField();
		lbTen = new javax.swing.JLabel();
		txtTen = new javax.swing.JTextField();
		lbLoai = new javax.swing.JLabel();
		cbLoai = new javax.swing.JComboBox<>();
		lbNXB = new javax.swing.JLabel();
		lbDonGia = new javax.swing.JLabel();
		txtDonGia = new javax.swing.JTextField();
		lbTuoiGioiHan = new javax.swing.JLabel();
		txtTuoiGioiHan = new javax.swing.JTextField();
		lbNCC = new javax.swing.JLabel();
		lbMoTa = new javax.swing.JLabel();
		txtMoTa = new javax.swing.JTextField();
		lbTacGia = new javax.swing.JLabel();
		txtTacGia = new javax.swing.JTextField();
		lbSoTrang = new javax.swing.JLabel();
		txtSoTrang = new javax.swing.JTextField();
		lbCapDoHoc = new javax.swing.JLabel();
		cbCDH = new javax.swing.JComboBox<>();
		lbNguoiDich = new javax.swing.JLabel();
		txtNguoiDIch = new javax.swing.JTextField();
		lbHinhAnh = new javax.swing.JLabel();
		txtHinhAnh = new javax.swing.JTextField();
		lbSoLuong = new javax.swing.JLabel();
		lbDonVi = new javax.swing.JLabel();
		lbVAT = new javax.swing.JLabel();
		txtSoLuong = new javax.swing.JTextField();
		txtVAT = new javax.swing.JTextField();
		lbLoaiBia = new javax.swing.JLabel();
		btnThem = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		btnSua = new javax.swing.JButton();
		cbNXB = new javax.swing.JComboBox<>();
		cbDonVi = new javax.swing.JComboBox<>();
		cbNCC = new javax.swing.JComboBox<>();
		cbLoaiBia = new javax.swing.JComboBox<>();
		lbNamXB = new javax.swing.JLabel();
		txtNamXB = new javax.swing.JTextField();
		btnChonFile = new javax.swing.JButton();
		lbMes = new javax.swing.JLabel();

		modelCboLoai = new DefaultComboBoxModel<LoaiSanPham>();
		modelCboNXB = new DefaultComboBoxModel<NhaXuatBan>();
		modelCboNCC = new DefaultComboBoxModel<NhaCungCap>();
		modelCboLoaiBia = new DefaultComboBoxModel<LoaiBia>();
		modelCboCDH = new DefaultComboBoxModel<CapDoHoc>();
		//
		//
		cbLoai.setEditable(true);
		cbNCC.setEditable(true);
		cbCDH.setEditable(true);
		cbNXB.setEditable(true);
		cbDonVi.setEditable(true);
		cbLoaiBia.setEditable(true);

		lbMes.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
		lbMes.setForeground(new java.awt.Color(225, 0, 0));

		jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		jPanel1.setPreferredSize(new java.awt.Dimension(960, 540));

		txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtTimKiemActionPerformed(evt);
			}
		});
		//
		modelSach = new DefaultTableModel(new Object[][] {

		}, new String[] { "STT", "Mã", "Tên ", "Loại", "Nhà xuất bản", "Năm xuất bản", "Số lượng", "Đơn giá", "Đơn vị ",
				"VAT", "Tuổi giới hạn", "Nhà cung cấp", "Mô tả", "Tác giả", "Số trang", "Loại bìa", "Cấp độ học",
				"Người dịch", "Hình ảnh" });
		tableSach.setModel(modelSach);
		tableSach.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tableSachMouseClicked(evt);
			}
		});

		jScrollPane1.setViewportView(tableSach);

		btnTimKiem.setText("Tìm kiếm");
		btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTimKiemActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addComponent(txtTimKiem).addGap(18, 18, 18)
								.addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(124, 124, 124))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel1Layout
										.createSequentialGroup().addComponent(jScrollPane1,
												javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
										.addContainerGap()))));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(32, 32, 32)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, Short.MAX_VALUE).addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		jPanel2.setPreferredSize(new java.awt.Dimension(560, 944));

		lbMa.setText("Mã:");

		txtMa.setBackground(new java.awt.Color(204, 204, 204));
		txtMa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtMaActionPerformed(evt);
			}
		});

		lbTen.setText("Tên:");

		lbLoai.setText("Loại:");

		cbLoai.setModel(modelCboLoai);
		cbLoai.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbLoaiActionPerformed(evt);
			}
		});

		lbNXB.setText("Nhà xuất bản:");

		lbDonGia.setText("Đơn giá:");

		txtDonGia.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtDonGiaActionPerformed(evt);
			}
		});

		lbTuoiGioiHan.setText("Tuổi giới hạn:");

		lbNCC.setText("Nhà cung cấp:");

		lbMoTa.setText("Mô tả:");

		lbTacGia.setText("Tác giả:");

		lbSoTrang.setText("Số trang:");

		lbCapDoHoc.setText("Cấp độ học:");

		//
		cbCDH.setModel(modelCboCDH);
		cbCDH.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbCDHActionPerformed(evt);
			}
		});

		lbNguoiDich.setText("Người dịch:");

		lbHinhAnh.setText("Hình ảnh:");

		lbSoLuong.setText("Số lượng:");

		lbDonVi.setText("Đơn vị:");

		lbVAT.setText("VAT:");

		lbLoaiBia.setText("Loại bìa:");

		btnThem.setText("THÊM");
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemActionPerformed(evt);
			}
		});

		btnXoa.setText("XÓA");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXoaActionPerformed(evt);
			}
		});

		btnSua.setText("SỬA");
		btnSua.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSuaActionPerformed(evt);
			}
		});

		//
		cbNXB.setModel(modelCboNXB);
		cbNXB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbNXBActionPerformed(evt);
			}
		});

		//
		cbDonVi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Quyển", "Lóc" }));
		cbDonVi.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbDonViActionPerformed(evt);
			}
		});

		//
		cbNCC.setModel(modelCboNCC);
		cbNCC.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbNCCActionPerformed(evt);
			}
		});

		//
		cbLoaiBia.setModel(modelCboLoaiBia);
		cbLoaiBia.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbLoaiBiaActionPerformed(evt);
			}
		});

		lbNamXB.setText("Năm xuất bản:");

		btnChonFile.setText("Chọn File");
		btnChonFile.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnChonFileActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(14, 14, 14).addGroup(jPanel2Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup()
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(lbMa, javax.swing.GroupLayout.PREFERRED_SIZE, 55,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lbTen).addComponent(lbNXB).addComponent(lbDonGia)
										.addComponent(lbTuoiGioiHan).addComponent(lbNCC).addComponent(lbMoTa)
										.addComponent(lbTacGia).addComponent(lbSoTrang).addComponent(lbCapDoHoc)
										.addComponent(lbNguoiDich).addComponent(lbHinhAnh))
								.addGap(29, 29, 29)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel2Layout.createSequentialGroup()
												.addComponent(txtSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 144,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(lbLoaiBia).addGap(18, 18, 18)
												.addComponent(cbLoaiBia, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))
										.addComponent(txtMa).addComponent(txtTen)
										.addComponent(cbNCC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(txtMoTa).addComponent(txtTacGia).addComponent(txtNguoiDIch)
										.addComponent(cbCDH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(txtDonGia, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(cbNXB, javax.swing.GroupLayout.Alignment.LEADING, 0,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(cbLoai, 0, 145, Short.MAX_VALUE)
												.addComponent(txtTuoiGioiHan)).addGap(18, 18, 18)
												.addGroup(jPanel2Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(jPanel2Layout.createSequentialGroup()
																.addGroup(jPanel2Layout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(lbSoLuong).addComponent(
																				lbDonVi)
																		.addComponent(lbVAT))
																.addGap(34, 34, 34)
																.addGroup(jPanel2Layout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(cbDonVi,
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				0, javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addComponent(txtSoLuong).addComponent(txtVAT)))
														.addGroup(jPanel2Layout.createSequentialGroup()
																.addComponent(lbNamXB)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(txtNamXB,
																		javax.swing.GroupLayout.DEFAULT_SIZE, 114,
																		Short.MAX_VALUE))))
										.addGroup(jPanel2Layout.createSequentialGroup()
												.addComponent(txtHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 266,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(btnChonFile, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
						.addGroup(jPanel2Layout.createSequentialGroup()
								.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(90, 90, 90)
								.addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 80,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 94,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel2Layout.createSequentialGroup()
										.addComponent(lbMes, javax.swing.GroupLayout.PREFERRED_SIZE, 437,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(3, 3, 3)))
						.addContainerGap()));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(16, 16, 16)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbMa, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbTen))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(lbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(cbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lbNamXB).addComponent(txtNamXB,
												javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(cbNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lbNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lbSoLuong).addComponent(txtSoLuong,
												javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbDonVi).addComponent(cbDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lbTuoiGioiHan)
										.addComponent(txtTuoiGioiHan, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lbVAT))
								.addComponent(txtVAT))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbNCC).addComponent(cbNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbMoTa))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbTacGia))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbSoTrang).addComponent(lbLoaiBia).addComponent(cbLoaiBia,
										javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(cbCDH, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbCapDoHoc))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbNguoiDich).addComponent(txtNguoiDIch,
										javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lbHinhAnh).addComponent(btnChonFile,
										javax.swing.GroupLayout.PREFERRED_SIZE, 28,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(lbMes, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(26, 26, 26)
						.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
						.addGap(18, 18, 18).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 489,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(11, 11, 11)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(21, 21, 21)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
								.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
	}// </editor-fold>

	private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void txtMaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
//    	System.out.println("btnTimKiem");
		timKiemSach();

	}

	private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		xoaSach();
	}

	private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		themSach();
	}

	private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		suaSach();
	}

	private void cbLoaiActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void cbNXBActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void cbDonViActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void cbNCCActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void cbLoaiBiaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void cbCDHActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void tableSachMouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		int row = tableSach.getSelectedRow();
		loadTbltoForm(row);
	}

	private void btnChonFileActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		JFileChooser file = new JFileChooser();
		FileNameExtensionFilter img = new FileNameExtensionFilter("hinh anh", "jpg", "png");
		file.setFileFilter(img);

		file.setMultiSelectionEnabled(false);
		int x = file.showDialog(this, "Chon file");
		if (x == JFileChooser.APPROVE_OPTION) {
			File f = file.getSelectedFile();
			String filename = f.getAbsolutePath();
			// lbMes.setIcon(new ImageIcon(f.getAbsolutePath()));
			// lbMes.setText(filename);
			txtHinhAnh.setText(filename);
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JButton btnChonFile;
	private javax.swing.JButton btnSua;
	private javax.swing.JButton btnThem;
	private javax.swing.JButton btnTimKiem;
	private javax.swing.JButton btnXoa;
	private javax.swing.JComboBox<CapDoHoc> cbCDH;
	private DefaultComboBoxModel<CapDoHoc> modelCboCDH;

	private javax.swing.JComboBox<String> cbDonVi;

	private javax.swing.JComboBox<LoaiSanPham> cbLoai;
	private DefaultComboBoxModel<LoaiSanPham> modelCboLoai;

	private javax.swing.JComboBox<LoaiBia> cbLoaiBia;
	private DefaultComboBoxModel<LoaiBia> modelCboLoaiBia;

	private javax.swing.JComboBox<NhaCungCap> cbNCC;
	private DefaultComboBoxModel<NhaCungCap> modelCboNCC;

	private javax.swing.JComboBox<NhaXuatBan> cbNXB;
	private DefaultComboBoxModel<NhaXuatBan> modelCboNXB;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel lbCapDoHoc;
	private javax.swing.JLabel lbDonGia;
	private javax.swing.JLabel lbDonVi;
	private javax.swing.JLabel lbHinhAnh;
	private javax.swing.JLabel lbLoai;
	private javax.swing.JLabel lbLoaiBia;
	private javax.swing.JLabel lbMa;
	private javax.swing.JLabel lbMes;
	private javax.swing.JLabel lbMoTa;
	private javax.swing.JLabel lbNCC;
	private javax.swing.JLabel lbNXB;
	private javax.swing.JLabel lbNamXB;
	private javax.swing.JLabel lbNguoiDich;
	private javax.swing.JLabel lbSoLuong;
	private javax.swing.JLabel lbSoTrang;
	private javax.swing.JLabel lbTacGia;
	private javax.swing.JLabel lbTen;
	private javax.swing.JLabel lbTuoiGioiHan;
	private javax.swing.JLabel lbVAT;
	private javax.swing.JTable tableSach;
	private javax.swing.JTextField txtDonGia;
	private javax.swing.JTextField txtHinhAnh;
	private javax.swing.JTextField txtMa;
	private javax.swing.JTextField txtMoTa;
	private javax.swing.JTextField txtNamXB;
	private javax.swing.JTextField txtNguoiDIch;
	private javax.swing.JTextField txtSoLuong;
	private javax.swing.JTextField txtSoTrang;
	private javax.swing.JTextField txtTacGia;
	private javax.swing.JTextField txtTen;
	private javax.swing.JTextField txtTimKiem;
	private javax.swing.JTextField txtTuoiGioiHan;
	private javax.swing.JTextField txtVAT;
	// End of variables declaration
	private DefaultTableModel modelSach;
	private SanPham_DAO sp_dao = new SanPham_DAO();
	private ArrayList<Sach> dssach = new ArrayList<Sach>();
	private int stt = 0;
	private int check = 0;

	private void loadSach() {
//		while (tableSach.getRowCount() != 0) {
//			modelSach.removeRow(0);
//		}
		modelSach.setRowCount(0);
		dssach = sp_dao.getAllSach();

		for (Sach sach : dssach) {
			Object row[] = { tableSach.getRowCount(), sach.getMaSP(), sach.getTenSP(), sach.getLoaiSP(),
					sach.getNhaXB(), sach.getNamXB(), sach.getSoLuong(), sach.getDonGia(), sach.getDonVi(),
					sach.getVAT(), sach.getTuoiGioiHan(), sach.getNhaCC(), sach.getMoTa(), sach.getTacGia().getTenTG(),
					sach.getSoTrang(), sach.getLoaiBia(), sach.getCapDoHoc(), sach.getNguoiDich(), sach.getHinhAnh() };
			modelSach.addRow(row);
		}
		loadData();
	}

	private void loadSach(ArrayList<Sach> dsSach) {
		modelSach.setRowCount(0);
		for (Sach sach : dsSach) {
			Object row[] = { tableSach.getRowCount(), sach.getMaSP(), sach.getTenSP(), sach.getLoaiSP(),
					sach.getNhaXB(), sach.getNamXB(), sach.getSoLuong(), sach.getDonGia(), sach.getDonVi(),
					sach.getVAT(), sach.getTuoiGioiHan(), sach.getNhaCC(), sach.getMoTa(), sach.getTacGia().getTenTG(),
					sach.getSoTrang(), sach.getLoaiBia(), sach.getCapDoHoc(), sach.getNguoiDich(), sach.getHinhAnh() };
			modelSach.addRow(row);
		}
		loadData();
	}

	public void loadData() {
		modelCboLoai.removeAllElements();
		modelCboNCC.removeAllElements();
		modelCboNXB.removeAllElements();
		modelCboCDH.removeAllElements();
		modelCboLoaiBia.removeAllElements();

		modelCboLoai.addAll(sp_dao.getLoaiSach());
		modelCboNXB.addAll(sp_dao.getNXB());
		modelCboNCC.addAll(sp_dao.getNCC());
		modelCboLoaiBia.addAll(sp_dao.getLoaiBia());
		modelCboCDH.addAll(sp_dao.getCDH());
	}

	public void loadTbltoForm(int row) {
		System.out.println(row);
		Sach sach = dssach.get(row);
		txtMa.setText(sach.getMaSP());
		txtTen.setText(sach.getTenSP());
		txtNamXB.setText(sach.getNamXB() + "");
		txtSoLuong.setText(sach.getSoLuong() + "");
		txtDonGia.setText(sach.getDonGia() + "");
		txtVAT.setText(sach.getVAT() + "");
		txtMoTa.setText(sach.getMoTa());
		txtTuoiGioiHan.setText(sach.getTuoiGioiHan() + "");
		txtSoTrang.setText(sach.getSoTrang() + "");
		txtTacGia.setText(sach.getTacGia().getTenTG() + "");
		txtNguoiDIch.setText(sach.getNguoiDich());
		txtHinhAnh.setText(sach.getHinhAnh());

		cbLoai.setSelectedItem(sach.getLoaiSP());
		cbNXB.setSelectedItem(sach.getNhaXB());
		cbNCC.setSelectedItem(sach.getNhaCC());
		cbLoaiBia.setSelectedItem(sach.getLoaiBia());
		cbCDH.setSelectedItem(sach.getCapDoHoc());
		cbDonVi.setSelectedItem(sach.getDonVi());
		setEditableForm(true);
	}

	private void setEditableForm(boolean st) {
		// TODO Auto-generated method stub
		txtMa.setEditable(false);
		txtTen.setEditable(st);
		txtNamXB.setEditable(st);
		txtSoLuong.setEditable(st);
		txtDonGia.setEditable(st);
		txtTuoiGioiHan.setEditable(st);
		txtVAT.setEditable(st);
		txtMoTa.setEditable(st);
		txtTacGia.setEditable(st);
		txtSoTrang.setEditable(st);
		txtNguoiDIch.setEditable(st);
		txtHinhAnh.setEditable(st);

	}

	public void xoaSach() {
		if (btnXoa.getText().equals("Huỷ") && check == 1) {
			xoaTrang();
			setEditableForm(false);
			lbMes.setText("");
			btnXoa.setText("Xóa");
			btnSua.setEnabled(true);
			check = 0;
		} else if (btnXoa.getText().equals("Huỷ") && check == 2) {
			xoaTrang();
			setEditableForm(false);
			lbMes.setText("");
			btnXoa.setText("Xóa");
			btnThem.setEnabled(true);
			check = 0;
		} else {
			int row = tableSach.getSelectedRowCount();
			if (JOptionPane.showConfirmDialog(null, "Xác nhận xóa") == JOptionPane.YES_OPTION) {
				try {
					sp_dao.xoa_SP(txtMa.getText());
				} catch (Exception e) {
					// TODO: handle exception
					e.printStackTrace();
				}
				JOptionPane.showMessageDialog(null, "Xóa thành công");
				loadSach();
			}
		}
	}

	public void xoaTrang() {
		txtMa.setText("");
		txtTen.setText("");
		txtNamXB.setText("");
		txtSoLuong.setText("");
		txtDonGia.setText("");
		txtVAT.setText("");
		txtMoTa.setText("");
		txtTuoiGioiHan.setText("");
		txtSoTrang.setText("");
		txtTacGia.setText("");
		txtHinhAnh.setText("");

		cbLoai.setSelectedItem(null);
		cbNCC.setSelectedItem(null);
		cbLoaiBia.setSelectedItem(null);
		cbCDH.setSelectedItem(null);
		cbNXB.setSelectedItem(null);
		cbDonVi.setSelectedItem(null);
	}

	public void themSach() {
		if (check != 1) {
			btnXoa.setText("Huỷ");
			btnSua.setEnabled(false);
			txtMa.setEditable(false);
			xoaTrang();
			check = 1;
		} else {
			checkThongTin();
			if (checkThongTin()) {
				SanPham_DAO sanPham_DAO = new SanPham_DAO();
				String tenSach = txtTen.getText();
				int namXB_SX = Integer.parseInt(txtNamXB.getText().trim());
				int soLuong = Integer.parseInt(txtSoLuong.getText().trim());
				Double donGia = Double.parseDouble(txtDonGia.getText().trim());
				int tuoiGH = Integer.parseInt(txtTuoiGioiHan.getText().trim());
				int vat = Integer.parseInt(txtVAT.getText().trim());
				String moTa = txtMoTa.getText();
				TacGia tacGia = sanPham_DAO.timTacGia(txtTacGia.getText());
				if (tacGia == null) {
					try {
						sanPham_DAO.themTG(new TacGia(txtTacGia.getText()));
					} catch (Exception e) {
						// TODO: handle exception
					}
					tacGia = sanPham_DAO.timTacGia(txtTacGia.getText());
				}
				int soTrang = Integer.parseInt(txtSoTrang.getText().trim());
				String nguoiDich = txtNguoiDIch.getText();
				String hinhAnh = txtHinhAnh.getText();

//			LoaiSanPham loaiSach = (LoaiSanPham) cbLoai.getSelectedItem();
				LoaiSanPham loaiSach = null;
				if (cbLoai.getSelectedItem() instanceof LoaiSanPham) {
					loaiSach = (LoaiSanPham) cbLoai.getSelectedItem();

				} else {
					String newSach = ((JTextComponent) cbLoai.getEditor().getEditorComponent()).getText();

					loaiSach = sanPham_DAO.timLoaiSP(newSach);
					if (loaiSach == null)
						try {
							sanPham_DAO.themLoaiSP(new LoaiSanPham(null, newSach));
						} catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					loaiSach = sanPham_DAO.timLoaiSP(newSach);
				}
//		NhaXuatBan nxb = (NhaXuatBan) cbNXB.getSelectedItem();
				NhaXuatBan NXB = null;
				if (cbNXB.getSelectedItem() instanceof NhaXuatBan) {
					NXB = (NhaXuatBan) cbNXB.getSelectedItem();

				} else {
					String newNXB = ((JTextComponent) cbNXB.getEditor().getEditorComponent()).getText();

					NXB = sanPham_DAO.timNXB(newNXB);
					if (NXB == null)
						try {
							sanPham_DAO.themNXB(new NhaXuatBan(null, newNXB));
						} catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					NXB = sanPham_DAO.timNXB(newNXB);
				}
				String donVi = (String) cbDonVi.getSelectedItem();
//		LoaiBia loaiBia = (LoaiBia) cbLoaiBia.getSelectedItem();
				LoaiBia loaiBia = null;
				if (cbLoaiBia.getSelectedItem() instanceof LoaiBia) {
					loaiBia = (LoaiBia) cbLoaiBia.getSelectedItem();

				} else {
					String newLB = ((JTextComponent) cbLoaiBia.getEditor().getEditorComponent()).getText();

					loaiBia = sanPham_DAO.timLoaiBia(newLB);
					if (loaiBia == null)
						try {
							sanPham_DAO.themLoaiBia(new LoaiBia(null, newLB));
						} catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					loaiBia = sanPham_DAO.timLoaiBia(newLB);
				}
				NhaCungCap ncc = (NhaCungCap) cbNCC.getSelectedItem();
				CapDoHoc cdh = new CapDoHoc();
				if (cbCDH.getSelectedItem() != null)
					cdh = (CapDoHoc) cbCDH.getSelectedItem();

				Sach sach = new Sach(tenSach, donVi, moTa, hinhAnh, soLuong, vat, donGia, loaiSach, ncc, namXB_SX,
						soTrang, tuoiGH, nguoiDich, NXB, tacGia, loaiBia, cdh);

				if (sanPham_DAO.timKiemSPTheoMa(sach.getTenSP()) == null) {
					try {
						;
						sanPham_DAO.themSach(sach);
						JOptionPane.showMessageDialog(null, "Thêm thành công");
						loadSach();
						stt = 0;
					} catch (Exception e) {
						// TODO: handle exception
//				e.printStackTrace();
					}
				} else
					JOptionPane.showMessageDialog(null, "sản phẩm đã tồn tại");
			}
		}

	}

	public void suaSach() {
		lbMes.setText("");
		if (check != 2) {
			setEditableForm(true);
			btnXoa.setText("Huỷ");
			btnThem.setEnabled(false);
			check = 2;
			System.out.println(check);
		} else {
			SanPham_DAO sanPham_DAO = new SanPham_DAO();
			String maSP = txtMa.getText();
			String tenSach = txtTen.getText();
			int namXB_SX = Integer.parseInt(txtNamXB.getText().trim());
			int soLuong = Integer.parseInt(txtSoLuong.getText().trim());
			Double donGia = Double.parseDouble(txtDonGia.getText().trim());
			int tuoiGH = Integer.parseInt(txtTuoiGioiHan.getText().trim());
			int vat = Integer.parseInt(txtVAT.getText().trim());
			String moTa = txtMoTa.getText();
//		String tacGia = txtTacGia.getText();
			TacGia tacGia = sanPham_DAO.timTacGia(txtTacGia.getText());
			if (tacGia == null) {
				try {
					sanPham_DAO.themTG(new TacGia(txtTacGia.getText()));
				} catch (Exception e) {
					// TODO: handle exception
				}
				tacGia = sanPham_DAO.timTacGia(txtTacGia.getText());
			}
			int soTrang = Integer.parseInt(txtSoTrang.getText().trim());
			String nguoiDich = txtNguoiDIch.getText();
			String hinhAnh = txtHinhAnh.getText();

//			LoaiSanPham loaiSp = (LoaiSanPham) cbLoai.getSelectedItem();
			LoaiSanPham loaiSach = null;
			if (cbLoai.getSelectedItem() instanceof LoaiSanPham) {
				loaiSach = (LoaiSanPham) cbLoai.getSelectedItem();

			} else {
				String newSach = ((JTextComponent) cbLoai.getEditor().getEditorComponent()).getText();

				loaiSach = sanPham_DAO.timLoaiSP(newSach);
				if (loaiSach == null)
					try {
						sanPham_DAO.themLoaiSP(new LoaiSanPham(null, newSach));
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				loaiSach = sanPham_DAO.timLoaiSP(newSach);
			}
//		NhaXuatBan nxb = (NhaXuatBan) cbNXB.getSelectedItem();
			NhaXuatBan NXB = null;
			if (cbNXB.getSelectedItem() instanceof NhaXuatBan) {
				NXB = (NhaXuatBan) cbNXB.getSelectedItem();

			} else {
				String newNXB = ((JTextComponent) cbNXB.getEditor().getEditorComponent()).getText();

				NXB = sanPham_DAO.timNXB(newNXB);
				if (NXB == null)
					try {
						sanPham_DAO.themNXB(new NhaXuatBan(null, newNXB));
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				NXB = sanPham_DAO.timNXB(newNXB);
			}
			String donVi = (String) cbDonVi.getSelectedItem();
//		LoaiBia loaiBia = (LoaiBia) cbLoaiBia.getSelectedItem();
			LoaiBia loaiBia = null;
			if (cbLoaiBia.getSelectedItem() instanceof LoaiBia) {
				loaiBia = (LoaiBia) cbLoaiBia.getSelectedItem();

			} else {
				String newLB = ((JTextComponent) cbLoaiBia.getEditor().getEditorComponent()).getText();

				loaiBia = sanPham_DAO.timLoaiBia(newLB);
				if (loaiBia == null)
					try {
						sanPham_DAO.themLoaiBia(new LoaiBia(null, newLB));
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				loaiBia = sanPham_DAO.timLoaiBia(newLB);
			}
			NhaCungCap ncc = (NhaCungCap) cbNCC.getSelectedItem();
			CapDoHoc cdh = new CapDoHoc();
			if (cbCDH.getSelectedItem() != null)
				cdh = (CapDoHoc) cbCDH.getSelectedItem();
			Sach sach = new Sach(maSP, tenSach, donVi, moTa, hinhAnh, soLuong, vat, donGia, loaiSach, ncc, namXB_SX,
					soTrang, tuoiGH, nguoiDich, NXB, tacGia, loaiBia, cdh);
			try {
				sanPham_DAO.suaSach(sach);
				JOptionPane.showMessageDialog(null, "Sửa thành công");
				loadSach();
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		}
	}

	private void timKiemSach() {
		// TODO Auto-generated method stu
		String txt = txtTimKiem.getText();
//		System.out.println(txt);
		SanPham_DAO sp_dao = new SanPham_DAO();
		ArrayList<Sach> dsSach = sp_dao.timKiemSach(txt);
		loadSach(dsSach);
	}

	private boolean checkThongTin() {
		// TODO Auto-generated method stub
		String tenSach = txtTen.getText();
		String namXB = txtNamXB.getText();
		String soLuong = txtSoLuong.getText();
		String donGia = txtDonGia.getText();
		String tuoiGH = txtTuoiGioiHan.getText();
		String vat = txtVAT.getText();
		String moTa = txtMoTa.getText();
		String tacGia = txtTacGia.getText();
		String soTrang = txtSoTrang.getText();
		String nguoiDich = txtNguoiDIch.getText();
		String hinhAnh = txtHinhAnh.getText();

		if (tenSach.equals("")) {
			lbMes.setText("Nhập tên sách");
			return false;
		}
		if (cbLoai.getSelectedItem() == null) {
			lbMes.setText("Chọn loại sản phẩm");
			return false;
		}
		if (namXB.equals("")) {
			lbMes.setText("Nhập năm xuất bản");
			return false;
		}
		if (cbNXB.getSelectedItem() == null) {
			lbMes.setText("Chọn nhà xuất bản sách");
			return false;
		}
		if (soLuong.equals("")) {
			lbMes.setText("Nhập số lượng sách");
			return false;
		}
		if (donGia.equals("")) {
			lbMes.setText("Nhập đơn giá sách");
			return false;
		}
		if (cbDonVi.getSelectedItem() == null) {
			lbMes.setText("Chọn đơn vị");
			return false;
		}
		if (tuoiGH.equals("")) {
			lbMes.setText("Nhập tuổi giới hạn");
			return false;
		}
		if (vat.equals("")) {
			lbMes.setText("Nhập VAT ");
			return false;
		}
		if (cbNCC.getSelectedItem() == null) {
			lbMes.setText("Chọn nhà cung cấp");
			return false;
		}
		if (moTa.equals("")) {
			lbMes.setText("Nhập mô tả");
			return false;
		}
		if (tacGia.equals("")) {
			lbMes.setText("Nhập tác giả sách");
			return false;
		}
		if (soTrang.equals("")) {
			lbMes.setText("Nhập số trang sách");
			return false;
		}
		if (cbLoaiBia.getSelectedItem() == null) {
			lbMes.setText("Chọn loại bìa");
			return false;
		}
		if (cbCDH.getSelectedItem() == null) {
			lbMes.setText("Chọn cấp độ học");
			return false;
		}
		if (nguoiDich.equals("")) {
			lbMes.setText("Nhập người dịch sách");
			return false;
		}
		if (hinhAnh.equals("")) {
			lbMes.setText("Nhập hình ảnh");
			return false;
		}
		return true;
	}

}
